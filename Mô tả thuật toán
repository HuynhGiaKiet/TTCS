Cây nhị phân tìm kiếm (Binary Search Tree - BST) là một cấu trúc dữ liệu cây trong lập trình máy tính và khoa học máy tính. 
Nó là một dạng cây nhị phân đặc biệt được sử dụng để lưu trữ và tìm kiếm dữ liệu một cách hiệu quả.

Trong một cây nhị phân tìm kiếm, mỗi nút của cây đều chứa một giá trị, và giá trị của tất cả các nút ở cây con bên trái của một nút cha đều nhỏ hơn giá trị của nút cha, trong khi giá trị của tất cả các nút ở cây con bên phải đều lớn hơn giá trị của nút cha. Điều này tạo ra một thuộc tính quan trọng: khi ta thực hiện tìm kiếm trong cây nhị phân tìm kiếm, ta có thể loại bỏ nửa cây (cây con bên trái hoặc bên phải) mà không làm giảm khả năng tìm kiếm.

BST hỗ trợ các thao tác cơ bản như thêm một phần tử mới, xóa một phần tử, và tìm kiếm một phần tử trong thời gian logarit (với logarit theo cơ số 2) do cấu trúc cây nhị phân tìm kiếm cung cấp. Tuy nhiên, trong trường hợp xấu nhất, khi cây không cân bằng (ví dụ: cây có thể trở thành một danh sách liên kết nếu chúng ta thêm các phần tử theo thứ tự tăng dần hoặc giảm dần), thời gian tìm kiếm có thể trở nên tuyến tính, là O(n), với n là số lượng nút trong cây. Để giải quyết vấn đề này, các biến thể của BST như cây nhị phân cân bằng được phát triển để đảm bảo thời gian tìm kiếm tốt nhất có thể.
